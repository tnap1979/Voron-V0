#####################################################################
# 	Macros Acciones
#####################################################################
[gcode_macro STRIP_ON]
gcode:
  SET_LED LED=strip RED=1 GREEN=1 BLUE=1

[gcode_macro STRIP_OFF]
gcode:
  SET_LED LED=strip RED=0 GREEN=0 BLUE=0

[gcode_macro TEST_MOVE]
gcode:
    G28
    G90
    G1 X2 Y2 F9000
    M400
    G1 Y100
    M400
    G1 X100
    M400
    G1 Y2
    M400
    G1 X2
    M400

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state  # Save the current G-code state with the name PAUSE_state.
  BASE_PAUSE  # Call the BASE_PAUSE macro.
  SET_IDLE_TIMEOUT TIMEOUT=7200  # Set idle timeout to 7200 seconds.
  G91  # Switch to relative positioning mode.
  G1 E-{1} F2100  # Retract filament at 2100 mm/minute.
  G1 Z{10} F900  # Move Z axis to position 10 at 900 mm/minute.
  G90  # Switch to absolute positioning mode.
  G1 X{10} Y{10} F6000  # Move X and Y axes to position (50, 0) at 6000 mm/minute.

[gcode_macro RESUME]
rename_existing: BASE_RESUME  # Rename an existing macro to BASE_RESUME.
gcode:
  ##### Read E from the pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### End of definitions #####
  G91  # Switch to relative positioning mode.
  G1 E{1} F2100  # Extrude filament by 1mm at a speed of 2100 mm/minute.
  RESTORE_GCODE_STATE NAME=PAUSE_state  # Restore G-code state from PAUSE_state.
  BASE_RESUME  # Call the BASE_RESUME macro.
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1  # Enable the filament sensor.

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE  # Rename an existing macro to CANCEL_PRINT_BASE.
gcode:
  TURN_OFF_HEATERS  # Turn off all heaters.
  G91  # Switch to relative positioning mode.
  G1 Z10 E-2 F3000  # Retract the filament a bit before lifting the nozzle.
  G1 E-2 F4000  # Retract filament even more.
  G90  # Switch to absolute positioning mode.
  G1 X10 Y110 F7000  # Move X to 30 and Y to 250 at a speed of 7000 mm/minute; home X axis.
  M106 S0  # Turn off layer cooling fan.
  M221 S100  # Reset extrusion multiplier to 100%.
  CANCEL_PRINT_BASE  # Call the CANCEL_PRINT_BASE macro.
  CLEAR_PAUSE  # Clear any pause state.
  SET_GCODE_OFFSET Z=0.0  # Set G-code offset for Z-axis to 0.0.
  RESETSPEEDS  # Reset printing speeds to default values.
  DISABLEXYE  # Disable X, Y, and E axes.

#####################################################################
# 	Macros Start & End Gcode
##################################################################### 
#[gcode_macro START_PRINT]
#gcode:
#  #{% set TOOL = params.TOOL|default(0)|int %} 
#  #{% set MULTIMATERIAL = params.MULTIMATERIAL|default(0)|int %} 
#  CLEAR_PAUSE  # Clear any previous pause state.
#  RESETSPEEDS  # Reset printing speeds to default values.
#  G21  # Set metric values.
#  G90  # Set absolute positioning.
#  M83  # Set extruder to relative mode.
#  G28  # Home all axes.
#  M104 S160  # Set extruder temperature to 160Â°C without waiting.
#  M190 S{params.BED_TEMP|default(printer.heater_bed.target, true)}  # Wait for bed to reach the specified temperature.
#  SET_GCODE_OFFSET Z=0.0  # Set G-code offset for Z-axis to 0.0.
#  G1 X1 Y1 Z0.3 F15000  # Move to the starting line position at a fast feed rate.
#  M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true)}  # Wait for extruder to heat up to the specified temperature.
#  #VORON_PURGE
#  #PRIME_LINE  # Prime the extruder with a line of filament.
#  M83  # Set extruder to relative mode.

[gcode_macro PRINT_START]
description: Common print start macro
gcode:
    # command params
    {% set target_bed = params.BED|default(110)|int %}
    {% set target_extruder = params.EXTRUDER|default(150)|int %}
    {% set target_chamber = params.CHAMBER|default(0)|int %}
    {% set filament_type = params.FILAMENT|default("")|upper %}
    {% set fl_size = params.SIZE|default("0_0_0_0")|string %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set ena_auto_z_offset = printer['gcode_macro _COMMON_VARIABLE'].auto_z_offset|lower %}
    {% set ena_quad_gantry_level = printer['gcode_macro _COMMON_VARIABLE'].quad_gantry_level|lower %}
    {% set ena_bed_mesh = printer['gcode_macro _COMMON_VARIABLE'].bed_mesh|lower %}
    {% set printing_message = printer['gcode_macro _PRINTER_VARIABLE'].printing_message|default(Printing) %}
    {% set unretract_start = printer['gcode_macro _PRINTER_VARIABLE'].extruder.unretract_start|default(9)|int %}
    {% set unretract_speed = printer['gcode_macro _PRINTER_VARIABLE'].extruder.unretract_speed|default(5)|int %}
    {% set filament_array = printer['gcode_macro _PRINTER_VARIABLE'].filament_temperature_array %}
    {% set filament_index = printer.save_variables.variables.filament_index|int %}
    {% set filament_type_loaded = filament_array[filament_index][0] %}
    {% set plate_offset_z = printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][1] %}
    {% set plate_name = printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index|int][0] %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("===== PRINT_START =====")}
        {action_respond_info("targets: [bed: '%s', extruder: '%s', chamber: '%s']" % (target_bed,target_extruder,target_chamber))}
        {action_respond_info("features: [auto_z_offset: '%s', quad_gantry_level: '%s']" % (ena_auto_z_offset,ena_quad_gantry_level))}
        {% if printer.bed_mesh %}
            {action_respond_info("bed_mesh: [profile_name: '%s']" % (printer.bed_mesh.profile_name))}
        {% endif %}
        {% if ena_auto_z_offset == "flexplate" %}
            {action_respond_info("flexplate: [plate_name: '%s', offset_z: '%smm']" % (plate_name,plate_offset_z))}
        {% endif %}
        {action_respond_info("filaments: [filament_array: '%s'" % (filament_array))}
        {action_respond_info("filaments: [filament_type: '%s', filament_index: '%s', filament_loaded: '%s'" % (filament_type,saved_filamentindex,filament_type_loaded))}
        {action_respond_info("fl_size: '%s'" % (fl_size))}
        {action_respond_info("unretract: [start: '%s', speed: '%s']" % (unretract_start,unretract_speed))}
        {action_respond_info("printing_message: '%s'" % (printing_message))}
        {action_respond_info("===============")}
    {% endif %}

    {% if printer['gcode_macro _PRE_PRINT_START'] is defined %}
        _PRE_PRINT_START DEBUG={debug}
    {% endif %}

    {% if filament_type|upper == filament_type_loaded|upper %}
        _SET_LED_STATE_BY_NAME STATE="homing"
        RESPOND MSG="Print Start"
        M117 Homing
        G28
        _PREHEAT BED={target_bed} CHAMBER={target_chamber} FILAMENT={filament_type} DEBUG={debug}
        _CALIBRATE SIZE={fl_size} DEBUG={debug}
        _SET_LED_STATE_BY_NAME STATE="heating"
        M117 Heating ~bed~{target_bed}~degrees~
        M190 S{target_bed}
        M117 Heating ~extruder~: {target_extruder}~degrees~
        M109 S{target_extruder}
        _SET_LED_STATE_BY_NAME STATE="printing"
        G1 Z5 F5000
        G90
        M83
        G1 E{unretract_start} F{unretract_speed*60}
        G92 E0
        RESPOND MSG="{printing_message}"
        M117 {printing_message}
    {% else %}
        {action_respond_info("===== PRINT_CANCELLED =====")}
        {action_respond_info("Print CANCELLED. You have '%s loaded, but the print asks for: '%s'" % (filament_type_loaded,filament_type))}
        BASE_CANCEL_PRINT
    {% endif %}

    {% if printer['gcode_macro _POST_PRINT_START'] is defined %}
        _POST_PRINT_START DEBUG={debug}
    {% endif %}

[gcode_macro PRIME_LINE]
gcode: 
  M83  # Set extruder to relative mode.
  G92 E0  # Reset Extruder position to 0.
  G1 Z0.5 F2000  # Move Z Axis up to 0.5 at a speed of 3000 mm/minute.
  G1 X20 Y1 Z0.4 E20 F900  # Draw the first line from X80 to X150 at Y1 and Z0.4, extruding 20mm at a speed of 1500 mm/minute.
  G1 X60 Y1 E20 F800  # Draw the second line from X150 to X80 at Y1, extruding 20mm at a speed of 1500 mm/minute.
  G1 E-0.2 F2000  # Retract filament by 0.2mm at a speed of 2000 mm/minute.
  G92 E0  # Reset Extruder position to 0 after retraction.
  G1 Z1 F2000  # Move Z up to 1mm at a speed of 2000 mm/minute to avoid scratching the surface.

[gcode_macro PRINT_END]
description: Common print end macro.
gcode:
    # command params
    {% set filament_type = params.FILAMENT|default("")|upper %}
    {% set retract_speed = params.RETRACT_SPEED|default(800)|int %}
    {% set cancel = params.CANCEL|default("")|upper %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set pause_retract_distance = printer['gcode_macro _PRINTER_VARIABLE'].extruder.pause_retract_distance|default(3)|int %}
    {% set end_retract_distance = printer['gcode_macro _PRINTER_VARIABLE'].extruder.end_retract_distance|default(10)|int %}
    {% set retract_speed = printer['gcode_macro _PRINTER_VARIABLE'].extruder.retract_speed|default(15)|int %}
    {% set end_retract_speed = printer['gcode_macro _PRINTER_VARIABLE'].extruder.end_retract_speed|default(5)|int %}
    {% set end_retract_speed_flex = printer['gcode_macro _PRINTER_VARIABLE'].extruder.end_retract_speed|default(2)|int %}
    {% set home_print_end = printer['gcode_macro _PRINTER_VARIABLE'].homing.home_print_end|default(X)|upper %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}
    {% set b2b_state = printer.save_variables.variables.b2b_state|default("false")|lower %}
    {% set ena_bed_mesh = printer["gcode_macro _COMMON_VARIABLE"].bed_mesh|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PRINT_END ====")}
        {action_respond_info("cancel: '%s' b2b_state: '%s'" % (cancel,b2b_state))}
        {action_respond_info("filament_type: '%s'" % (filament_type))}
        {action_respond_info("home_print_end: '%s'" % (home_print_end))}
        {action_respond_info("retract: [pause: '%smm', end: '%smm', retract: '%smm/s', end_retract: '%smm/s']" % (pause_retract_distance,end_retract_distance,retract_speed,end_retract_speed))}
        {action_respond_info("===============")}
    {% endif %}

    M400
    G91
    G92 E0
    {% if filament_type != FLEX %}
        G1 E-{pause_retract_distance} F{retract_speed*60}
        _PARK_SAFE_END DEBUG={DEBUG}
        G92 E0
        G1 E-{end_retract_distance-pause_retract_distance} F{end_retract_speed*60}
    {% elif filament_type == FLEX %}
        G1 E-{pause_retract_distance} F{end_retract_speed_flex*60}
        _PARK_SAFE_END DEBUG={DEBUG}
        G92 E0
        G1 E-{end_retract_distance-pause_retract_distance} F{end_retract_speed_flex*60}
    {% endif %}
    {% if b2b_state == "false" %}
        RESPOND MSG='Ending print'
        TURN_OFF_HEATERS
        M107  # turn off fan
        G90 # absolute positioning
        G28 {home_print_end}
        {% if ena_bed_mesh == "true" %}
            BED_MESH_CLEAR
        {% endif %}
        RESPOND MSG='Print Complete'
        M117 Print complete!
        M84
        _CIRCULATION_END FILAMENT={filament_type} CANCEL={cancel} DEBUG={debug}
        M117
    {% else %}
        RESPOND MSG='Waiting for next print. Holding temperature.'
        M104 S150
        G28 {home_print_end}
    {% endif %}
    _ADD_PRINT_TIME DEBUG={debug}
    _SD_PRINT_STATS R="done" DEBUG={debug}
    _SD_PRINTER_STATS DEBUG={debug}
    _SET_LED_STATE_BY_NAME STATE="on"

#[gcode_macro END_PRINT]
#gcode:
#  TURN_OFF_HEATERS  # Turn off all heaters.
#  G91  # Switch to relative positioning mode.
#  G1 Z10 E-1 F3000  # Retract the filament a bit before lifting the nozzle.
#  G1 E-4 F4000   # Retract filament even more.
#  G90  # Switch to absolute positioning mode.
#  G1 X10 Y110 F7000  # Move X to 30 and Y to 250 at a speed of 7000 mm/minute; home X axis.
#  DISABLEXYE  # Disable X, Y, and E axes.
#  M106 S0  # Turn off layer cooling fan.
#  M221 S100  # Reset extrusion multiplier to 100%.
#  CLEAR_PAUSE  # Clear any pause state.
# SET_GCODE_OFFSET Z=0.0  # Set G-code offset for Z-axis to 0.0.
#  RESETSPEEDS  # Reset printing speeds to default values.
# M220 S100

[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
	SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro DISABLEXYE]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro MIDDLE]
gcode:
  G90
  G1 X60 Y60 Z20 F1500

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c $0"
timeout: 90.0
verbose: True